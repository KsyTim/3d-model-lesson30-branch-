/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_countTimer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/countTimer */ \"./src/modules/countTimer.js\");\n/* harmony import */ var _modules_toggleMenu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/toggleMenu */ \"./src/modules/toggleMenu.js\");\n/* harmony import */ var _modules_toggleModal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/toggleModal */ \"./src/modules/toggleModal.js\");\n/* harmony import */ var _modules_tabs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/tabs */ \"./src/modules/tabs.js\");\n/* harmony import */ var _modules_slider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/slider */ \"./src/modules/slider.js\");\n/* harmony import */ var _modules_ourTeam__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/ourTeam */ \"./src/modules/ourTeam.js\");\n/* harmony import */ var _modules_calculator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/calculator */ \"./src/modules/calculator.js\");\n/* harmony import */ var _modules_formValidator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/formValidator */ \"./src/modules/formValidator.js\");\n/* harmony import */ var _modules_sendForm__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/sendForm */ \"./src/modules/sendForm.js\");\n// eslint-disable-next-line strict\n // импорт данных\n\n\n\n\n\n\n\n\n\n // таймер\n\n(0,_modules_countTimer__WEBPACK_IMPORTED_MODULE_0__.default)('13 March 2021'); //меню\n\n(0,_modules_toggleMenu__WEBPACK_IMPORTED_MODULE_1__.default)(); // модальное окно\n\n(0,_modules_toggleModal__WEBPACK_IMPORTED_MODULE_2__.default)(); // табы\n\n(0,_modules_tabs__WEBPACK_IMPORTED_MODULE_3__.default)(); // слайдер\n\n(0,_modules_slider__WEBPACK_IMPORTED_MODULE_4__.default)(); // наша команда\n\n(0,_modules_ourTeam__WEBPACK_IMPORTED_MODULE_5__.default)(); // калькулятор\n\n(0,_modules_calculator__WEBPACK_IMPORTED_MODULE_6__.default)(100); // валидация форм\n\n(0,_modules_formValidator__WEBPACK_IMPORTED_MODULE_7__.default)(); // send-ajax-form\n\n(0,_modules_sendForm__WEBPACK_IMPORTED_MODULE_8__.default)();\n\n//# sourceURL=webpack://glo_js/./src/index.js?");

/***/ }),

/***/ "./src/modules/calculator.js":
/*!***********************************!*\
  !*** ./src/modules/calculator.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// калькулятор в секции \"рассчитать стоимость услуг\"\nvar calculator = function calculator() {\n  var price = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n  // элементы со страницы\n  var calc = document.getElementById('calc'),\n      calcAreas = calc.querySelectorAll('input'),\n      calcBlock = document.querySelector('.calc-block'),\n      calcType = document.querySelector('.calc-type'),\n      calcSquare = document.querySelector('.calc-square'),\n      calcDay = document.querySelector('.calc-day'),\n      calcCount = document.querySelector('.calc-count'),\n      totalValue = document.getElementById('total'); // обработка ввода данных в поля формы и их валидация\n\n  calcAreas.forEach(function (item) {\n    item.addEventListener('input', function (event) {\n      var target = event.target,\n          regNum = target.value.replace(/\\D/g, '');\n      target.value = regNum;\n    });\n  }); // функция рассчет стоимости\n\n  var countSum = function countSum() {\n    var total = 0,\n        countValue = 1,\n        dayValue = 1;\n    var typeValue = calcType.options[calcType.selectedIndex].value,\n        squareValue = +calcSquare.value; // условие, если количество помещений > 1\n\n    if (calcCount.value > 1) {\n      countValue += (calcCount.value - 1) / 10;\n    } // условие, если срок исполнения от 2 до 5 дней, т.е. срочный заказ\n\n\n    if (calcDay.value && calcDay.value < 5) {\n      dayValue *= 2; // условие, если срок исполнения < 10\n    } else if (calcDay.value && calcDay.value < 10) {\n      dayValue *= 1.5;\n    } // условие, если поля заполнены, рассчитать стоимость\n\n\n    if (typeValue && squareValue) {\n      total = Math.round(price * typeValue * squareValue * countValue * dayValue);\n    } // функция с анимацией пересчета\n\n\n    var setValue = function setValue(oldValue, newValue, operation, increaseBy, speed) {\n      var interval = false; // условие, если старая цена (oldValue) меньше новой (newValue), то \n      // увеличиваем значение на (increaseBy) со скоростью (speed)\n\n      if (operation) {\n        interval = setInterval(function () {\n          if (oldValue.innerHTML >= newValue) {\n            oldValue.innerHTML = newValue;\n            clearInterval(interval);\n          } else {\n            oldValue.innerHTML = oldValue.innerHTML * 1 + increaseBy;\n          }\n        }, speed); // иначе уменьшаем\n      } else {\n        interval = setInterval(function () {\n          if (oldValue.innerHTML <= newValue) {\n            oldValue.innerHTML = newValue;\n            clearInterval(interval);\n          } else {\n            oldValue.innerHTML = oldValue.innerHTML * 1 - increaseBy;\n          }\n        }, speed);\n      }\n    }; // если итого меньше новой цены, то operation = true, т.е. увеличиваем\n\n\n    var oldPrice = document.getElementById('total');\n\n    if (+oldPrice.textContent < total) {\n      if (total < 10001) {\n        setValue(totalValue, total, true, 100, .5);\n      } else if (total > 10000) {\n        setValue(totalValue, total, true, 1000, .5);\n      } // иначе operation = false, т.е. уменьшаем\n\n    } else if (+oldPrice.textContent > total) {\n      if (total < 10001) {\n        setValue(totalValue, total, false, 100, .5);\n      } else if (total > 10000) {\n        setValue(totalValue, total, false, 1000, .5);\n      }\n    }\n  }; // событие изменения данных полей формы и вызов функции пересчета итого\n\n\n  calcBlock.addEventListener('change', function (event) {\n    var target = event.target;\n\n    if (target === calcType || target === calcSquare || target === calcDay || target === calcCount) {\n      countSum();\n    }\n  });\n}; // экспорт данных\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (calculator);\n\n//# sourceURL=webpack://glo_js/./src/modules/calculator.js?");

/***/ }),

/***/ "./src/modules/countTimer.js":
/*!***********************************!*\
  !*** ./src/modules/countTimer.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// таймер\nvar countTimer = function countTimer(dDay) {\n  // объявляем переменные с данными со страницы, куда будет выведен результат работы фкнции таймера\n  var timerHours = document.querySelector('#timer-hours'),\n      timerMinutes = document.querySelector('#timer-minutes'),\n      timerSeconds = document.querySelector('#timer-seconds'),\n      timerAction = document.querySelector('.timer-action'); // функция, подсчитывающая оставшееся кол-во времени до завершения акции\n\n  var getTimeRemaining = function getTimeRemaining() {\n    // дата завершения акции\n    var dateStop = new Date(dDay).getTime(),\n        // сегодняшняя дата\n    dateNow = new Date().getTime(),\n        // общее количество времени до завершения акции (в мс)\n    timeRemaining = (dateStop - dateNow) / 1000,\n        // количество секунд до завершения акции\n    seconds = Math.floor(timeRemaining % 60),\n        // количество минут до завершения акции\n    minutes = Math.floor(timeRemaining / 60 % 60),\n        // количество часов до завершения акции\n    hours = Math.floor(timeRemaining / 3600),\n        // функция, подставляющая ноль перед часами/минутами/секундами, если их количество измеряется в единицах\n    preNumber = function preNumber(num) {\n      if (num < 10) {\n        return \"0\".concat(num);\n      } else {\n        return num;\n      }\n    };\n\n    return {\n      timeRemaining: timeRemaining,\n      hours: preNumber(hours),\n      minutes: preNumber(minutes),\n      seconds: preNumber(seconds)\n    };\n  }; // функция-таймер, обновляющая данные на странице\n\n\n  var updateClock = function updateClock() {\n    var timer = getTimeRemaining();\n    timerHours.textContent = timer.hours;\n    timerMinutes.textContent = timer.minutes;\n    timerSeconds.textContent = timer.seconds; // переменная с таймером\n\n    var clockTimeout; // условие: если до завершения акции более 0 (в мс), то отработатывает\n    //  функция-таймер, обновляющая данные на странице updateClock, в протичном\n    // случае - значение обнуляется и выводится информация о завершении акуии\n\n    if (timer.timeRemaining > 0) {\n      clockTimeout = setTimeout(function () {\n        setTimeout(updateClock, 1000);\n      });\n    } else if (timer.timeRemaining <= 0) {\n      clearTimeout(clockTimeout);\n      timerHours.textContent = '00';\n      timerMinutes.textContent = '00';\n      timerSeconds.textContent = '00';\n      timerAction.textContent = 'Акция завершена';\n    }\n  };\n\n  updateClock();\n}; // экспорт данных\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (countTimer);\n\n//# sourceURL=webpack://glo_js/./src/modules/countTimer.js?");

/***/ }),

/***/ "./src/modules/formValidator.js":
/*!**************************************!*\
  !*** ./src/modules/formValidator.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// валидация всех форм на странице\nvar formValidator = function formValidator() {\n  // все элементы форм на странице\n  var form = document.querySelectorAll('form');\n  form.forEach(function (item) {\n    // все поля всех форм на странице\n    item.querySelectorAll('input').forEach(function (item) {\n      // событие вне фокуса поля формы\n      item.addEventListener('blur', function (event) {\n        var target = event.target; // функция увеличения символов\n\n        var replaceUpper = function replaceUpper(match) {\n          return match.toUpperCase();\n        }; // функция уменьшения символов\n\n\n        var replaceLower = function replaceLower(match) {\n          return match.toLowerCase();\n        }; // для полей 'Ваше сообщение'\n\n\n        if (target.placeholder === 'Ваше сообщение') {\n          // регулярное выражение ввод кириллических букв, пробелов, '-' и чисел\n          var reg = target.value.replace(/[a-z+=)({*&$%#~^`<>№|\\\\})]/gi, ''); // замена двух пробелов в середине строки на один\n\n          reg = reg.replace(/ {2,}/g, ' '); // удаление пробелов и знаков '-' в конце и начале строки\n\n          reg = reg.replace(/^( *-* *)|( *-* *)$/g, ''); // замена введенного пользователем значения на валидное\n\n          target.value = reg; // для полей 'Ваше имя'\n        } else if (target.placeholder === 'Ваше имя') {\n          // регулярное выражение ввод кириллических букв и пробелов\n          var _reg = target.value.replace(/[a-z0-9/.,\\-+=_)({*&$%#@'\"!~^:;?`<>№|\\\\})]/gi, ''); // замена двух пробелов в середине строки на один\n\n\n          _reg = _reg.replace(/ {2,}/g, ' '); // удаление пробелов конце и начале строки\n\n          _reg = _reg.replace(/^( *)|( *)$/g, ''); // замена введенного пользователем значения на валидное\n\n          target.value = _reg; // для полей 'Ваш E-mail' и 'E-mail'\n        } else if (target.placeholder === 'E-mail' || target.placeholder === 'Ваш E-mail') {\n          // регулярное выражение ввод латинских букв, точек, знаков '-' и '@'\n          var _reg2 = target.value.replace(/[а-яё0-9/, +=)({&$%#^:;?`<>№|\\\\})]/gi, ''); // замена введенного пользователем значения на валидное\n\n\n          target.value = _reg2; // для полей 'Номер телефона' и 'Ваш номер телефона'\n        } else if (target.placeholder === 'Номер телефона' || target.placeholder === 'Ваш номер телефона') {\n          // проверка на номер +7/7/8:\n          // запрет ввода символов больше 12 символов при формате +7 и больше 11 при формате 7/8\n          // проверка, если внутри строки буквы и '+'\n          var checkNumber = function checkNumber(reg) {\n            // первый символ подстроки\n            var firstDigit = reg.substr(0, 1); // значение поля\n\n            var inputValue = target.value; // регулярное выражение ввод цифр, знаков '+'\n\n            var result = inputValue.replace(/[a-zа-яё/.,\\-=_)({*&$%#@'\"!~^:;?`<>№|\\\\})]/gi, ''); // замена введенного пользователем значения на валидное\n\n            inputValue = result; // условие если введеная строка короче 11 символов, то стирать значение\n\n            if (inputValue.length < 11) {\n              inputValue = '';\n              return inputValue; // иначе условие\n            } else {\n              // условие, если введенное значение начинается с '+'\n              if (firstDigit === '+') {\n                // условие, если введеная строка короче 12 символов, то стирать значение\n                if (inputValue.length < 12) {\n                  inputValue = '';\n                  return inputValue; // иначе условие\n                } else {\n                  // если внутри строки знаки '+', то стрирать значение\n                  if (inputValue.substr(1).includes('+')) {\n                    inputValue = '';\n                    return inputValue; // если второй символ не '7', то стрирать значение\n                  } else if (inputValue[1] !== '7') {\n                    inputValue = '';\n                    return inputValue; // иначе вывод введенного пользователем значения\n                  } else {\n                    inputValue = inputValue.substr(0, 12);\n                    return inputValue;\n                  }\n                } // условие если введенное значение начинается с '7' или '8'\n\n              } else if (firstDigit === '7' || firstDigit === '8') {\n                // если внутри строки знаки '+', то стрирать значение\n                if (inputValue.substr(1).includes('+')) {\n                  inputValue = '';\n                  return inputValue; // иначе вывод введенного пользователем значения\n                } else {\n                  inputValue = inputValue.substr(0, 11);\n                  return inputValue;\n                } // условие, если введенное значение не начинается с '+', '7' или '8',\n                // то стирать значение\n\n              } else if (firstDigit !== '+' || firstDigit !== '7' || firstDigit !== '8') {\n                inputValue = '';\n                return inputValue;\n              }\n            }\n          }; // регулярное выражение ввод цифр, знаков '+'\n\n\n          var _reg3 = target.value.replace(/[a-zа-яё/.,\\-=_)({*&$%#@'\"!~^:;?`<>№|\\\\})]/gi, ''); // результат валидации поля\n\n\n          var result = checkNumber(_reg3); // замена введенного пользователем значения на валидное\n\n          target.value = result;\n        } // для поля 'Ваше имя'\n\n\n        if (target.placeholder === 'Ваше имя') {\n          // введенное пользователем значение\n          var str = target.value,\n              // валидация на кириллические буквы с увеличением первой буквы в заглавную\n          regFirst = str.replace(/([А-ЯЁа-яё]*)/g, replaceLower).substr(1),\n              // валидация на кириллические буквы с уменьшением последующих букв в строчные\n          regOther = str.replace(/([А-ЯЁа-яё]*)/g, replaceUpper).substr(0, 1),\n              // конкатенация строк с заглавной и строчными буквами\n          _reg4 = regOther + regFirst; // замена введенного пользователем значения на валидное\n\n\n          target.value = _reg4;\n        }\n      });\n    });\n  });\n}; // экспорт данных\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formValidator);\n\n//# sourceURL=webpack://glo_js/./src/modules/formValidator.js?");

/***/ }),

/***/ "./src/modules/ourTeam.js":
/*!********************************!*\
  !*** ./src/modules/ourTeam.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// секция \"наша команда\"\nvar ourTeam = function ourTeam() {\n  // элемент со страницы \"наша команда\"\n  var ourTeam = document.getElementById('command'),\n      // каждый участник (карточка)\n  member = ourTeam.querySelectorAll('.col-12');\n  member.forEach(function (item) {\n    // при наведении изменяем значение атрибута src на значение атрибута data-img\n    item.addEventListener('mouseenter', function (event) {\n      var target = event.target,\n          memberPhoto = target.querySelector('img'),\n          memberPhotoSrc = memberPhoto.src,\n          memberPhotoData = memberPhoto.dataset.img;\n      memberPhoto.src = memberPhotoData;\n      memberPhoto.dataset.img = memberPhotoSrc;\n    }); // в противном случае, когда убираем курсор с карточки возвращаем значения атрибутов обратно\n\n    item.addEventListener('mouseleave', function (event) {\n      var target = event.target,\n          memberPhoto = target.querySelector('img'),\n          memberPhotoSrc = memberPhoto.src,\n          memberPhotoData = memberPhoto.dataset.img;\n      memberPhoto.src = memberPhotoData;\n      memberPhoto.dataset.img = memberPhotoSrc;\n    });\n  });\n}; // экспорт данных\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ourTeam);\n\n//# sourceURL=webpack://glo_js/./src/modules/ourTeam.js?");

/***/ }),

/***/ "./src/modules/sendForm.js":
/*!*********************************!*\
  !*** ./src/modules/sendForm.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// отправка формы при клике на \"оставить заявку\"\nvar sendForm = function sendForm() {\n  // сообщения для отображения на странице при обработке запроса\n  var errorMessage = 'Что-то пошло не так...',\n      successMessage = 'Спасибо! Мы скоро свяжемся с Вами!'; // создание элемента с информацией - статус обработки запроса\n\n  var statusMessage = document.createElement('div');\n  statusMessage.classList.add('status-message');\n  statusMessage.style.cssText = 'font-size: 1.5rem; color: #fff;'; // событие отправки формы\n\n  document.body.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    if (event.target.tagName.toLowerCase() === 'form') {\n      event.target.appendChild(statusMessage); // анимация во время ожидания при запросе на сервер\n\n      var animationLoading = \"\\n      <div class=\\\"sk-wave\\\">\\n        <div class=\\\"sk-rect sk-rect-1\\\"></div>\\n        <div class=\\\"sk-rect sk-rect-2\\\"></div>\\n        <div class=\\\"sk-rect sk-rect-3\\\"></div>\\n        <div class=\\\"sk-rect sk-rect-4\\\"></div>\\n        <div class=\\\"sk-rect sk-rect-5\\\"></div>\\n      </div>\\n      \";\n      statusMessage.insertAdjacentHTML('beforeend', animationLoading);\n      var formData = new FormData(event.target);\n      var body = {};\n      formData.forEach(function (val, key) {\n        body[key] = val;\n      }); // функция-отправка POST-запроса с помощью fetch\n\n      var postData = function postData(body) {\n        return fetch('./server.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json; charset=utf-8'\n          },\n          body: JSON.stringify(body)\n        });\n      }; // закрытие модального окна при получении положительного статуса после отправки запроса на сервер\n\n\n      var closePopup = function closePopup() {\n        var timeout = setTimeout(closePopup, 2000),\n            status = document.querySelector('.status-message'),\n            statusParent = status.closest('form').parentElement.parentElement.parentElement;\n\n        if (statusMessage.textContent === '' && statusParent.className === 'popup') {\n          statusParent.style.display = 'none';\n        }\n\n        if (statusParent.style.display === 'none') {\n          clearTimeout(timeout);\n        }\n      }; // удаление положительного статуса после отправки запроса на сервер\n\n\n      var clearOutputData = function clearOutputData() {\n        var timeout = setTimeout(clearOutputData, 3000);\n\n        if (statusMessage.textContent) {\n          statusMessage.textContent = '';\n          setTimeout(closePopup, 2000);\n        } else if (statusMessage.textContent === '') {\n          clearTimeout(timeout);\n        }\n      }; // удаление значений полей формы после отправки запроса на сервер\n\n\n      var outputData = function outputData() {\n        statusMessage.textContent = successMessage;\n        event.target.querySelectorAll('input').forEach(function (item) {\n          item.value = '';\n        });\n        setTimeout(clearOutputData, 3000);\n      }; // обработка данных при POST-запросе\n\n\n      postData(body).then(function (response) {\n        if (response.status !== 200) {\n          throw new Error('status network is not 200');\n        }\n\n        outputData();\n      })[\"catch\"](function (error) {\n        statusMessage.textContent = errorMessage;\n        console.error(error);\n      });\n    }\n  });\n}; // экспорт данных\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sendForm);\n\n//# sourceURL=webpack://glo_js/./src/modules/sendForm.js?");

/***/ }),

/***/ "./src/modules/slider.js":
/*!*******************************!*\
  !*** ./src/modules/slider.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// слайдер\nvar slider = function slider() {\n  // элементысао страницы\n  var slider = document.querySelector('.portfolio-content'),\n      dots = document.querySelector('.portfolio-dots');\n  var slide = document.querySelectorAll('.portfolio-item'),\n      dot = document.querySelectorAll('.dot'); // добавляем точки для управления слайдами в зависимости от количества слайдов на странице\n\n  for (var i = 0; i < slide.length; i++) {\n    dots.insertAdjacentHTML('beforeend', '<li class=\"dot\"></li>');\n    var firstDot = document.querySelectorAll('.dot');\n    firstDot[0].classList.add('dot-active');\n  }\n\n  var currentSlide = 0,\n      interval; // к предыдущему слайду\n\n  var prevSlide = function prevSlide(elem, index, className) {\n    elem[index].classList.remove(className);\n  }; // к следующему слайду\n\n\n  var nextSlide = function nextSlide(elem, index, className) {\n    elem[index].classList.add(className);\n  }; // авто слайд-шоу\n\n\n  var autoPlaySlide = function autoPlaySlide() {\n    slide = document.querySelectorAll('.portfolio-item');\n    dot = document.querySelectorAll('.dot');\n    prevSlide(slide, currentSlide, 'portfolio-item-active');\n    prevSlide(dot, currentSlide, 'dot-active');\n    currentSlide++;\n\n    if (currentSlide >= slide.length) {\n      currentSlide = 0;\n    }\n\n    nextSlide(slide, currentSlide, 'portfolio-item-active');\n    nextSlide(dot, currentSlide, 'dot-active');\n  }; // воспроизвести слайд-шоу\n\n\n  var startSlide = function startSlide() {\n    var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2000;\n    interval = setInterval(autoPlaySlide, time);\n  }; // остановить слайд-шоу\n\n\n  var stopSlide = function stopSlide() {\n    clearInterval(interval);\n  }; // клики по кнопкам \"листать вправо\", \"листать влево\", \"точкам\" (для активных слайдов\n  // добавляем класс активной) для управления сладами на странице\n\n\n  slider.addEventListener('click', function (event) {\n    event.preventDefault();\n    slide = document.querySelectorAll('.portfolio-item');\n    var target = event.target;\n\n    if (!target.matches('.portfolio-btn, .dot')) {\n      return;\n    }\n\n    prevSlide(slide, currentSlide, 'portfolio-item-active');\n    prevSlide(dot, currentSlide, 'dot-active');\n\n    if (target.matches('#arrow-right')) {\n      currentSlide++;\n    } else if (target.matches('#arrow-left')) {\n      currentSlide--;\n    } else if (target.matches('.dot')) {\n      dot.forEach(function (elem, index) {\n        if (elem === target) {\n          currentSlide = index;\n        }\n      });\n    } //  условие, если дошли до последнего слайда (при перелистывании вправо), то вернуться к первому\n\n\n    if (currentSlide >= document.querySelectorAll('.portfolio-item').length) {\n      currentSlide = 0; // иначе (при перелистывании влево), вернуться к крайнему\n    } else if (currentSlide < 0) {\n      currentSlide = document.querySelectorAll('.portfolio-item').length - 1;\n    }\n\n    nextSlide(slide, currentSlide, 'portfolio-item-active');\n    nextSlide(dot, currentSlide, 'dot-active');\n  }); // при наведении мыши на элементы управления слайдами останавливать слайд-шоу\n\n  slider.addEventListener('mouseover', function (event) {\n    if (event.target.matches('.portfolio-btn') || event.target.matches('.dot')) {\n      stopSlide();\n    }\n  }); // воспроизводить обратно слайд-шоу, когда мышь убрана с элементов управления слайдами\n\n  slider.addEventListener('mouseout', function (event) {\n    if (event.target.matches('.portfolio-btn') || event.target.matches('.dot')) {\n      startSlide();\n    }\n  });\n  startSlide(2000);\n}; // экспорт данных\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (slider);\n\n//# sourceURL=webpack://glo_js/./src/modules/slider.js?");

/***/ }),

/***/ "./src/modules/tabs.js":
/*!*****************************!*\
  !*** ./src/modules/tabs.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// табы \"нащи услуги\"\nvar tabs = function tabs() {\n  // элементы со страницы\n  var tabHeader = document.querySelector('.service-header'),\n      tab = tabHeader.querySelectorAll('.service-header-tab'),\n      tabContent = document.querySelectorAll('.service-tab'),\n      // функция, добавляющая/убирающая активный класс контенту таба\n  toggleTabContent = function toggleTabContent(index) {\n    for (var i = 0; i < tabContent.length; i++) {\n      if (index === i) {\n        tab[i].classList.add('active');\n        tabContent[i].classList.remove('d-none');\n      } else {\n        tab[i].classList.remove('active');\n        tabContent[i].classList.add('d-none');\n      }\n    }\n  }; // функция, добавляющая/убирающая активный класс заголовку активного таба\n\n\n  tabHeader.addEventListener('click', function (event) {\n    var target = event.target;\n    target = target.closest('.service-header-tab');\n\n    if (target) {\n      tab.forEach(function (item, i) {\n        if (item === target) {\n          toggleTabContent(i);\n        }\n      });\n    }\n  });\n}; // экспорт данных\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (tabs);\n\n//# sourceURL=webpack://glo_js/./src/modules/tabs.js?");

/***/ }),

/***/ "./src/modules/toggleMenu.js":
/*!***********************************!*\
  !*** ./src/modules/toggleMenu.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// функция, скрывающая и отображающая меню при клике на \"гамбургер\"\nvar toggleMenu = function toggleMenu() {\n  // переменная с блоком меню\n  var menu = document.querySelector('menu'); // функция, отображающая меню на странице путем toggle class\n\n  var actionMenu = function actionMenu() {\n    menu.classList.toggle('active-menu');\n  }; // функция, отслеживающая клики по элементам на странице\n\n\n  var eventListener = function eventListener() {\n    document.addEventListener('click', function (event) {\n      // переменная события по клику\n      var target = event.target,\n          // клик по меню\n      targetMenu = target.closest('.menu'),\n          // клик по \"закрыть\"\n      targetCloseBtn = target.closest('.close-btn'),\n          // клик по элементам меню\n      targetMenuItem = target.closest('ul>li>a'),\n          // клик по стрелке \"перейти к нашим услугам\" в главной секции\n      targetToServices = target.closest('[href=\"#service-block\"'),\n          // ширина эдемента на странице\n      width = document.documentElement.offsetWidth; // условие для отключения анимации на экранах < 768px\n\n      if (width < 768) {\n        menu = document.querySelector('menu');\n\n        if (targetMenu !== null) {\n          menu.style.transform = 'translateX(100%)';\n        } else if (targetCloseBtn !== null) {\n          menu.style.transform = 'translateX(-100%)';\n        } else if (targetMenuItem !== null) {\n          menu.style.transform = 'translateX(-100%)';\n        } else if (menu.getAttribute('style') === 'transform: translateX(100%);') {\n          menu.style.transform = 'translateX(-100%)';\n        }\n      } else {\n        menu = document.querySelector('menu');\n\n        if (targetMenu !== null) {\n          actionMenu();\n        } else if (targetCloseBtn !== null) {\n          actionMenu(); // условие: если клик по элементам меню, то скролить до элемента с id,\n          // совпадающим со значением ссылки (href) на кликнутом элементе\n        } else if (targetMenuItem !== null) {\n          actionMenu();\n          event.preventDefault(); // значение ссылки (href) gj кликнутому элементу\n\n          var id = target.getAttribute('href').substr(1),\n              // элемент с id\n          scrollTo = document.getElementById(id),\n              // значение до верхней границы элемента, по которому происходит клик\n          elemPosition = scrollTo.getBoundingClientRect().top; // плавная прокуратка на необходимое количество px до элемента\n\n          window.scrollBy({\n            top: elemPosition,\n            behavior: 'smooth'\n          }); // условие: если клик по стрелке \"перейти к нашим услугам\" в главной \n          // секции, то плавный скролл до секции \"наши услуги\"\n        } else if (targetToServices !== null) {\n          event.preventDefault(); // значение ссылки (href) gj кликнутому элементу\n\n          var _id = document.querySelector('[href=\"#service-block\"').getAttribute('href').substr(1),\n              // элемент с id\n          _scrollTo = document.getElementById(_id),\n              // значение до верхней границы элемента, по которому происходит клик\n          _elemPosition = _scrollTo.getBoundingClientRect().top; // плавная прокуратка на необходимое количество px до элемента\n\n\n          window.scrollBy({\n            top: _elemPosition,\n            behavior: 'smooth'\n          });\n        } else if (menu.className === 'active-menu') {\n          actionMenu();\n        }\n      }\n    });\n  }; // вызов функции, отслеживающей клики по элементам на странице\n\n\n  eventListener();\n}; // экспорт данных\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toggleMenu);\n\n//# sourceURL=webpack://glo_js/./src/modules/toggleMenu.js?");

/***/ }),

/***/ "./src/modules/toggleModal.js":
/*!************************************!*\
  !*** ./src/modules/toggleModal.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// модальное окно\nvar toggleModal = function toggleModal() {\n  // элементы со страницы\n  var modal = document.querySelector('.popup'),\n      modalContent = document.querySelector('.popup-content'),\n      modalBtn = document.querySelectorAll('.popup-btn'),\n      closeModalBtn = document.querySelector('.popup-close'),\n      // функция с анимацией для открытия модального окна\n  openModal = function openModal() {\n    var count = 0;\n    var height = document.documentElement.offsetHeight / 50,\n        openModal = setInterval(function () {\n      count += 5;\n\n      if (count - 5 < height) {\n        modalContent.style.top = count + 'px';\n      } else if (count === height) {\n        clearInterval(openModal);\n      }\n    }, 5);\n  },\n      // функция с анимацией для закрытия модального окна\n  closeModal = function closeModal() {\n    var count = 0;\n    var height = document.documentElement.offsetHeight / 50,\n        closeModal = setInterval(function () {\n      count += 5;\n\n      if (count - 5 < height) {\n        var top = height - count;\n        modalContent.style.top = top + 'px';\n      } else if (count === height) {\n        clearInterval(closeModal);\n      }\n    }, 5);\n  },\n      // ширина эдемента на странице\n  width = document.documentElement.offsetWidth; // условие для отключения анимации на экранах < 768px\n\n\n  if (width < 768) {\n    modalBtn.forEach(function (elem) {\n      // клик по кнопке \"оставить заявку\" = отобразить модальное окно\n      elem.addEventListener('click', function () {\n        modal.style.display = 'block';\n      });\n    }); // клик по элементам модального окна\n\n    modal.addEventListener('click', function (event) {\n      var target = event.target; // клик по кнопке \"закрыть\" = закрыть модальное окно\n\n      if (target.classList.contains('popup-close')) {\n        modal.style.display = 'none'; // клик по контенту моадльного окна\n      } else {\n        target = target.closest('.popup-content'); // при клике по подложке (вне окна) = закрыть модальное окно\n\n        if (!target) {\n          modal.style.display = 'none';\n        }\n      }\n    }); // esc = закрыть модальное окно\n\n    document.addEventListener('keydown', function (event) {\n      if (event.which === 27) {\n        modal.style.display = 'none';\n      }\n    }); // иначе анимация работает\n  } else {\n    modalBtn.forEach(function (elem) {\n      elem.addEventListener('click', function () {\n        modal.style.display = 'block';\n        openModal();\n      });\n    });\n    modal.addEventListener('click', function (event) {\n      var target = event.target;\n\n      if (target.classList.contains('popup-close')) {\n        modal.style.display = 'none';\n        closeModal();\n      } else {\n        target = target.closest('.popup-content');\n\n        if (!target) {\n          modal.style.display = 'none';\n          closeModal();\n        }\n      }\n    });\n    document.addEventListener('keydown', function (event) {\n      if (event.which === 27) {\n        modal.style.display = 'none';\n        closeModal();\n      }\n    });\n  }\n}; // экспорт данных\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toggleModal);\n\n//# sourceURL=webpack://glo_js/./src/modules/toggleModal.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;